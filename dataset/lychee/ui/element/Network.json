{
	"header": {
		"identifier": "lychee.ui.element.Network",
		"attaches": {},
		"tags": {},
		"requires": [
			"lychee.ui.entity.Input",
			"lychee.ui.entity.Select"
		],
		"includes": [
			"lychee.ui.Element"
		],
		"supports": {},
		"type": "Composite"
	},
	"memory": {
		"_Element": {
			"chunk": "lychee.import('lychee.ui.Element')",
			"type": "lychee.Definition",
			"hash": "8e05c4c6",
			"value": {
				"reference": "lychee.ui.Element",
				"arguments": []
			}
		},
		"_Input": {
			"chunk": "lychee.import('lychee.ui.entity.Input')",
			"type": "lychee.Definition",
			"hash": "42594032",
			"value": {
				"reference": "lychee.ui.entity.Input",
				"arguments": []
			}
		},
		"_Select": {
			"chunk": "lychee.import('lychee.ui.entity.Select')",
			"type": "lychee.Definition",
			"hash": "ebc6bc7f",
			"value": {
				"reference": "lychee.ui.entity.Select",
				"arguments": []
			}
		},
		"_API_ORIGIN": {
			"chunk": "(function(location) {\n\n\t\tlet origin = location.origin || '';\n\t\tlet proto  = origin.split(':')[0];\n\n\t\tif (/app|file|chrome-extension/g.test(proto)) {\n\n\t\t\treturn 'http://harvester.artificial.engineering:4848';\n\n\t\t} else if (/http|https/g.test(proto)) {\n\n\t\t\treturn location.origin;\n\n\t\t} else {\n\n\t\t\treturn '';\n\n\t\t}\n\n\t})(global.location || {})",
			"type": "function",
			"hash": "9951f4bf",
			"memory": [],
			"parameters": [
				{
					"chunk": null,
					"name": "location",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "'http://harvester.artificial.engineering:4848'",
					"type": "String",
					"value": "http://harvester.artificial.engineering:4848"
				},
				{
					"chunk": "''",
					"type": "String",
					"value": ""
				}
			]
		},
		"_load_api": {
			"chunk": "function(url, callback, scope) {\n\n\t\turl = typeof url === 'string' ? url : '/api/server/connect?identifier=/projects/boilerplate';\n\n\n\t\tlet config = new Config(_API_ORIGIN + url);\n\n\t\tconfig.onload = function(result) {\n\t\t\tcallback.call(scope, result === true ? this.buffer : null);\n\t\t};\n\n\t\tconfig.load();\n\n\t}",
			"type": "function",
			"hash": "b3020ac0",
			"memory": [],
			"parameters": [
				{
					"chunk": "typeof url === 'string' ? url : '/api/server/connect?identifier=/projects/boilerplate'",
					"name": "url",
					"type": "String",
					"value": "/api/server/connect?identifier=/projects/boilerplate"
				},
				{
					"chunk": null,
					"name": "callback",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "scope",
					"type": "undefined"
				}
			],
			"values": []
		},
		"_read": {
			"chunk": "function() {\n\n\t\tlet main = global.MAIN || null;\n\t\tif (main !== null) {\n\n\t\t\tlet client = main.defaults.client;\n\t\t\tlet server = main.defaults.server;\n\n\n\t\t\tif (typeof client === 'string') {\n\n\t\t\t\tthis.getEntity('API').setValue(client);\n\t\t\t\tthis.getEntity('mode').setValue('dynamic');\n\n\t\t\t} else if (client instanceof Object) {\n\n\t\t\t\tthis.getEntity('host').setValue(client.host);\n\t\t\t\tthis.getEntity('port').setValue(client.port);\n\t\t\t\tthis.getEntity('mode').setValue('static');\n\n\t\t\t}\n\n\n\t\t\tif (typeof server === 'string') {\n\n\t\t\t\tthis.getEntity('API').setValue(server);\n\t\t\t\tthis.getEntity('mode').setValue('dynamic');\n\n\t\t\t} else if (server instanceof Object) {\n\n\t\t\t\tthis.getEntity('host').setValue(server.host);\n\t\t\t\tthis.getEntity('port').setValue(server.port);\n\t\t\t\tthis.getEntity('mode').setValue('static');\n\n\t\t\t}\n\n\t\t}\n\n\t}",
			"type": "function",
			"hash": "1f749bf5",
			"memory": [],
			"parameters": [],
			"values": []
		},
		"_save": {
			"chunk": "function() {\n\n\t\tlet main = global.MAIN || null;\n\t\tif (main !== null) {\n\n\t\t\tlet client = main.client || null;\n\t\t\tlet server = main.server || null;\n\n\n\t\t\tlet mode = this.getEntity('mode').value;\n\t\t\tif (mode === 'dynamic') {\n\n\t\t\t\tif (client !== null) {\n\n\t\t\t\t\t_load_api(this.getEntity('API').value, function(settings) {\n\n\t\t\t\t\t\tclient.disconnect();\n\t\t\t\t\t\tclient.setHost(settings.host);\n\t\t\t\t\t\tclient.setPort(settings.port);\n\t\t\t\t\t\tclient.connect();\n\n\t\t\t\t\t}, this);\n\n\t\t\t\t}\n\n\n\t\t\t\tif (server !== null) {\n\n\t\t\t\t\t_load_api(this.getEntity('API').value, function(settings) {\n\n\t\t\t\t\t\tserver.disconnect();\n\t\t\t\t\t\tserver.setHost(settings.host);\n\t\t\t\t\t\tserver.setPort(settings.port);\n\t\t\t\t\t\tserver.connect();\n\n\t\t\t\t\t}, this);\n\n\t\t\t\t}\n\n\t\t\t} else if (mode === 'static') {\n\n\n\t\t\t\tif (client !== null) {\n\n\t\t\t\t\tclient.disconnect();\n\t\t\t\t\tclient.setHost(this.getEntity('host').value);\n\t\t\t\t\tclient.setPort(this.getEntity('port').value);\n\t\t\t\t\tclient.connect();\n\n\t\t\t\t}\n\n\n\t\t\t\tif (server !== null) {\n\n\t\t\t\t\tserver.disconnect();\n\t\t\t\t\tserver.setHost(this.getEntity('host').value);\n\t\t\t\t\tserver.setPort(this.getEntity('port').value);\n\t\t\t\t\tserver.connect();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}",
			"type": "function",
			"hash": "9273b354",
			"memory": [
				"_load_api"
			],
			"parameters": [],
			"values": []
		}
	},
	"errors": [],
	"result": {
		"constructor": {
			"chunk": "function(data) {\n\n\t\tlet states = Object.assign({}, data);\n\n\n\t\tstates.label    = 'Network';\n\t\tstates.options  = [ 'Save' ];\n\t\tstates.relayout = true;\n\n\n\t\t_Element.call(this, states);\n\n\n\n\t\t/*\n\t\t * INITIALIZATION\n\t\t */\n\n\t\tthis.setEntity('mode', new _Select({\n\t\t\toptions: [ 'dynamic', 'static' ],\n\t\t\tvalue:   'dynamic'\n\t\t}));\n\n\t\tthis.setEntity('host', new _Input({\n\t\t\ttype:    _Input.TYPE.text,\n\t\t\tmin:     1,\n\t\t\tmax:     1024,\n\t\t\tvalue:   'localhost',\n\t\t\tvisible: false\n\t\t}));\n\n\t\tthis.setEntity('port', new _Input({\n\t\t\ttype:    _Input.TYPE.number,\n\t\t\tmin:     1024,\n\t\t\tmax:     65534,\n\t\t\tvalue:   1337,\n\t\t\tvisible: false\n\t\t}));\n\n\t\tthis.setEntity('API', new _Input({\n\t\t\ttype:  _Input.TYPE.text,\n\t\t\tvalue: '/api/server/connect?identifier=/projects/boilerplate'\n\t\t}));\n\n\t\tthis.getEntity('mode').bind('change', function(value) {\n\n\t\t\tif (value === 'dynamic') {\n\n\t\t\t\tthis.getEntity('host').visible = false;\n\t\t\t\tthis.getEntity('port').visible = false;\n\t\t\t\tthis.getEntity('API').visible  = true;\n\n\t\t\t} else if (value === 'static') {\n\n\t\t\t\tthis.getEntity('host').visible = true;\n\t\t\t\tthis.getEntity('port').visible = true;\n\t\t\t\tthis.getEntity('API').visible  = false;\n\n\t\t\t}\n\n\n\t\t\tthis.trigger('relayout');\n\n\t\t}, this);\n\n\t\tthis.bind('change', function(action) {\n\n\t\t\tif (action === 'save') {\n\t\t\t\t_save.call(this);\n\t\t\t}\n\n\t\t}, this);\n\n\n\t\t_read.call(this);\n\n\t\tstates = null;\n\n\t}",
			"type": "function",
			"hash": "4bd96b8d",
			"parameters": [
				{
					"chunk": null,
					"name": "data",
					"type": "Object"
				}
			],
			"memory": [
				"_Element",
				"_Input",
				"_Select",
				"_read",
				"_save"
			]
		},
		"states": {},
		"properties": {},
		"enums": {},
		"events": {
			"relayout": {
				"chunk": "function() {}",
				"name": "relayout",
				"type": "event",
				"hash": "42164547",
				"methods": [],
				"parameters": []
			}
		},
		"methods": {
			"deserialize": {
				"chunk": "function(blob) {}",
				"type": "function",
				"hash": "cf6d9c5f",
				"memory": [],
				"parameters": [
					{
						"name": "blob",
						"type": "SerializationBlob",
						"value": {}
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"serialize": {
				"chunk": "function() {\n\n\t\t\tlet data = _Element.prototype.serialize.call(this);\n\t\t\tdata['constructor'] = 'lychee.ui.element.Network';\n\n\n\t\t\treturn data;\n\n\t\t}",
				"type": "function",
				"hash": "eb570b39",
				"memory": [
					"_Element"
				],
				"parameters": [],
				"values": [
					{
						"chunk": "{ 'constructor': 'lychee.event.Emitter',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t}",
						"type": "Object",
						"value": {}
					}
				]
			}
		}
	}
}