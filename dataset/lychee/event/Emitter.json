{
	"header": {
		"identifier": "lychee.event.Emitter",
		"attaches": {},
		"tags": {},
		"requires": [],
		"includes": [],
		"supports": {},
		"type": "Composite"
	},
	"memory": {
		"_bind": {
			"chunk": "function(event, callback, scope, once) {\n\n\t\tif (event === null || callback === null) {\n\t\t\treturn false;\n\t\t}\n\n\n\t\tlet pass_event = false;\n\t\tlet pass_self  = false;\n\n\t\tlet modifier = event.charAt(0);\n\t\tif (modifier === '@') {\n\n\t\t\tevent      = event.substr(1, event.length - 1);\n\t\t\tpass_event = true;\n\n\t\t} else if (modifier === '#') {\n\n\t\t\tevent     = event.substr(1, event.length - 1);\n\t\t\tpass_self = true;\n\n\t\t}\n\n\n\t\tif (this.___events[event] === undefined) {\n\t\t\tthis.___events[event] = [];\n\t\t}\n\n\n\t\tthis.___events[event].push({\n\t\t\tpass_event: pass_event,\n\t\t\tpass_self:  pass_self,\n\t\t\tcallback:   callback,\n\t\t\tscope:      scope,\n\t\t\tonce:       once\n\t\t});\n\n\n\t\treturn true;\n\n\t}",
			"type": "function",
			"hash": "679e903f",
			"parameters": [
				{
					"chunk": "event.substr(1, event.length - 1)",
					"name": "event",
					"type": "Number",
					"value": 1337
				},
				{
					"chunk": null,
					"name": "callback",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "scope",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "once",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "false",
					"type": "Boolean",
					"value": false
				},
				{
					"chunk": "true",
					"type": "Boolean",
					"value": true
				}
			]
		},
		"_relay": {
			"chunk": "function(event, instance, once) {\n\n\t\tif (event === null || instance === null) {\n\t\t\treturn false;\n\t\t}\n\n\n\t\tlet callback = function() {\n\n\t\t\tlet event = arguments[0];\n\t\t\tlet data  = [];\n\n\t\t\tfor (let a = 1, al = arguments.length; a < al; a++) {\n\t\t\t\tdata.push(arguments[a]);\n\t\t\t}\n\n\t\t\tthis.trigger(event, data);\n\n\t\t};\n\n\n\t\tif (this.___events[event] === undefined) {\n\t\t\tthis.___events[event] = [];\n\t\t}\n\n\n\t\tthis.___events[event].push({\n\t\t\tpass_event: true,\n\t\t\tpass_self:  false,\n\t\t\tcallback:   callback,\n\t\t\tscope:      instance,\n\t\t\tonce:       once\n\t\t});\n\n\n\t\treturn true;\n\n\t}",
			"type": "function",
			"hash": "edb6891b",
			"parameters": [
				{
					"chunk": null,
					"name": "event",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "instance",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "once",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "false",
					"type": "Boolean",
					"value": false
				},
				{
					"chunk": "true",
					"type": "Boolean",
					"value": true
				}
			]
		},
		"_trigger": {
			"chunk": "function(event, data) {\n\n\t\tif (this.___events !== undefined && this.___events[event] !== undefined) {\n\n\t\t\tlet value = undefined;\n\n\t\t\tfor (let e = 0; e < this.___events[event].length; e++) {\n\n\t\t\t\tlet args  = [];\n\t\t\t\tlet entry = this.___events[event][e];\n\n\t\t\t\tif (entry.pass_event === true) {\n\n\t\t\t\t\targs.push(event);\n\n\t\t\t\t} else if (entry.pass_self === true) {\n\n\t\t\t\t\targs.push(this);\n\n\t\t\t\t}\n\n\n\t\t\t\tif (data !== null) {\n\t\t\t\t\targs.push.apply(args, data);\n\t\t\t\t}\n\n\n\t\t\t\tlet result = entry.callback.apply(entry.scope, args);\n\t\t\t\tif (result !== undefined) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\n\n\t\t\t\tif (entry.once === true) {\n\n\t\t\t\t\tif (this.unbind(event, entry.callback, entry.scope) === true) {\n\t\t\t\t\t\te--;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn false;\n\n\t}",
			"type": "function",
			"hash": "b294fc01",
			"parameters": [
				{
					"chunk": null,
					"name": "event",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "data",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "result",
					"type": "Boolean",
					"value": true
				},
				{
					"chunk": "false",
					"type": "Boolean",
					"value": false
				}
			]
		},
		"_unbind": {
			"chunk": "function(event, callback, scope) {\n\n\t\tlet found = false;\n\n\t\tif (event !== null) {\n\n\t\t\tfound = _unbind_event.call(this, event, callback, scope);\n\n\t\t} else {\n\n\t\t\tfor (event in this.___events) {\n\n\t\t\t\tlet result = _unbind_event.call(this, event, callback, scope);\n\t\t\t\tif (result === true) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn found;\n\n\t}",
			"type": "function",
			"hash": "1d0eda9b",
			"parameters": [
				{
					"chunk": null,
					"name": "event",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "callback",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "scope",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "false",
					"type": "Boolean",
					"value": false
				},
				{
					"chunk": "_unbind_event.call(this, event, callback, scope)",
					"type": "undefined"
				},
				{
					"chunk": "true",
					"type": "Boolean",
					"value": true
				}
			]
		},
		"_unbind_event": {
			"chunk": "function(event, callback, scope) {\n\n\t\tif (this.___events !== undefined && this.___events[event] !== undefined) {\n\n\t\t\tlet found = false;\n\n\t\t\tfor (let e = 0, el = this.___events[event].length; e < el; e++) {\n\n\t\t\t\tlet entry = this.___events[event][e];\n\n\t\t\t\tif ((callback === null || entry.callback === callback) && (scope === null || entry.scope === scope)) {\n\n\t\t\t\t\tfound = true;\n\n\t\t\t\t\tthis.___events[event].splice(e, 1);\n\t\t\t\t\tel--;\n\t\t\t\t\te--;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn found;\n\n\t\t}\n\n\n\t\treturn false;\n\n\t}",
			"type": "function",
			"hash": "c8316210",
			"parameters": [
				{
					"chunk": null,
					"name": "event",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "callback",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "scope",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "false",
					"type": "Boolean",
					"value": false
				},
				{
					"chunk": "true",
					"type": "Boolean",
					"value": true
				}
			]
		}
	},
	"errors": [],
	"result": {
		"constructor": {
			"chunk": "function() {\n\n\t\tthis.___events   = {};\n\t\tthis.___timeline = {\n\t\t\tbind:    [],\n\t\t\ttrigger: [],\n\t\t\trelay:   [],\n\t\t\tunbind:  []\n\t\t};\n\n\t}",
			"type": "function",
			"hash": "7903e3da",
			"parameters": []
		},
		"states": {},
		"properties": {
			"___events": {
				"chunk": "this.___events   = {};",
				"type": "Object",
				"hash": "2de80e91",
				"value": {
					"chunk": "{}",
					"type": "Object",
					"hash": "30f4c306",
					"value": {}
				}
			},
			"___timeline": {
				"chunk": "this.___timeline = {\n\t\t\tbind:    [],\n\t\t\ttrigger: [],\n\t\t\trelay:   [],\n\t\t\tunbind:  []\n\t\t};",
				"type": "Object",
				"hash": "fb8c06ff",
				"value": {
					"chunk": "{\n\t\t\tbind:    [],\n\t\t\ttrigger: [],\n\t\t\trelay:   [],\n\t\t\tunbind:  []\n\t\t}",
					"type": "Object",
					"hash": "8b9a0eed",
					"value": {
						"bind": [],
						"trigger": [],
						"relay": [],
						"unbind": []
					}
				}
			}
		},
		"enums": {},
		"events": {},
		"methods": {
			"deserialize": {
				"chunk": "function(blob) {\n\n\t\t\tif (blob.events instanceof Object) {\n\t\t\t\t// TODO: deserialize events\n\t\t\t}\n\n\t\t\tif (blob.timeline instanceof Object) {\n\t\t\t\t// TODO: deserialize timeline\n\t\t\t}\n\n\t\t}",
				"type": "function",
				"hash": "9ff8d099",
				"parameters": [
					{
						"chunk": null,
						"name": "blob",
						"type": "undefined"
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"serialize": {
				"chunk": "function() {\n\n\t\t\tlet blob = {};\n\n\n\t\t\tif (Object.keys(this.___events).length > 0) {\n\n\t\t\t\tblob.events = {};\n\n\t\t\t\tfor (let event in this.___events) {\n\n\t\t\t\t\tblob.events[event] = [];\n\n\t\t\t\t\tfor (let e = 0, el = this.___events[event].length; e < el; e++) {\n\n\t\t\t\t\t\tlet entry = this.___events[event][e];\n\n\t\t\t\t\t\tblob.events[event].push({\n\t\t\t\t\t\t\tpass_event: entry.pass_event,\n\t\t\t\t\t\t\tpass_self:  entry.pass_self,\n\t\t\t\t\t\t\tcallback:   lychee.serialize(entry.callback),\n\t\t\t\t\t\t\t// scope:      lychee.serialize(entry.scope),\n\t\t\t\t\t\t\tscope:      null,\n\t\t\t\t\t\t\tonce:       entry.once\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif (this.___timeline.bind.length > 0 || this.___timeline.trigger.length > 0 || this.___timeline.unbind.length > 0) {\n\n\t\t\t\tblob.timeline = {};\n\n\n\t\t\t\tif (this.___timeline.bind.length > 0) {\n\n\t\t\t\t\tblob.timeline.bind = [];\n\n\t\t\t\t\tfor (let b = 0, bl = this.___timeline.bind.length; b < bl; b++) {\n\t\t\t\t\t\tblob.timeline.bind.push(this.___timeline.bind[b]);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif (this.___timeline.trigger.length > 0) {\n\n\t\t\t\t\tblob.timeline.trigger = [];\n\n\t\t\t\t\tfor (let t = 0, tl = this.___timeline.trigger.length; t < tl; t++) {\n\t\t\t\t\t\tblob.timeline.trigger.push(this.___timeline.trigger[t]);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif (this.___timeline.unbind.length > 0) {\n\n\t\t\t\t\tblob.timeline.unbind = [];\n\n\t\t\t\t\tfor (let u = 0, ul = this.___timeline.unbind.length; u < ul; u++) {\n\t\t\t\t\t\tblob.timeline.unbind.push(this.___timeline.unbind[u]);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn {\n\t\t\t\t'constructor': 'lychee.event.Emitter',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t};\n\n\t\t}",
				"type": "function",
				"hash": "26437afc",
				"parameters": [],
				"values": [
					{
						"chunk": "{ 'constructor': 'lychee.event.Emitter',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t}",
						"type": "Object",
						"value": {}
					}
				]
			},
			"bind": {
				"chunk": "function(event, callback, scope, once) {\n\n\t\t\tevent    = typeof event === 'string'    ? event    : null;\n\t\t\tcallback = callback instanceof Function ? callback : null;\n\t\t\tscope    = scope !== undefined          ? scope    : this;\n\t\t\tonce     = once === true;\n\n\n\t\t\tlet result = _bind.call(this, event, callback, scope, once);\n\t\t\tif (result === true && lychee.debug === true) {\n\n\t\t\t\tthis.___timeline.bind.push({\n\t\t\t\t\ttime:     Date.now(),\n\t\t\t\t\tevent:    event,\n\t\t\t\t\tcallback: lychee.serialize(callback),\n\t\t\t\t\t// scope:    lychee.serialize(scope),\n\t\t\t\t\tscope:    null,\n\t\t\t\t\tonce:     once\n\t\t\t\t});\n\n\t\t\t}\n\n\n\t\t\treturn result;\n\n\t\t}",
				"type": "function",
				"hash": "8aebc82e",
				"parameters": [
					{
						"chunk": "typeof event === 'string'    ? event    : null",
						"name": "event",
						"type": "String",
						"value": null
					},
					{
						"chunk": "callback instanceof Function ? callback : null",
						"name": "callback",
						"type": "Function",
						"value": null
					},
					{
						"chunk": "scope !== undefined          ? scope    : this",
						"name": "scope",
						"type": "Object",
						"value": {}
					},
					{
						"chunk": "once === true",
						"name": "once",
						"type": "Boolean",
						"value": true
					}
				],
				"values": [
					{
						"chunk": "result",
						"type": "Boolean",
						"value": true
					}
				]
			},
			"relay": {
				"chunk": "function(event, instance, once) {\n\n\t\t\tevent    = typeof event === 'string'               ? event    : null;\n\t\t\tinstance = lychee.interfaceof(Composite, instance) ? instance : null;\n\t\t\tonce     = once === true;\n\n\n\t\t\tlet result = _relay.call(this, event, instance, once);\n\t\t\tif (result === true && lychee.debug === true) {\n\n\t\t\t\tthis.___timeline.relay.push({\n\t\t\t\t\ttime:     Date.now(),\n\t\t\t\t\tevent:    event,\n\t\t\t\t\tinstance: lychee.serialize(instance),\n\t\t\t\t\tonce:     once\n\t\t\t\t});\n\n\t\t\t}\n\n\n\t\t\treturn result;\n\n\t\t}",
				"type": "function",
				"hash": "d991bc79",
				"parameters": [
					{
						"chunk": "typeof event === 'string'               ? event    : null",
						"name": "event",
						"type": "String",
						"value": null
					},
					{
						"chunk": "lychee.interfaceof(Composite, instance) ? instance : null",
						"name": "instance",
						"type": "Composite",
						"value": null
					},
					{
						"chunk": "once === true",
						"name": "once",
						"type": "Boolean",
						"value": true
					}
				],
				"values": [
					{
						"chunk": "result",
						"type": "Boolean",
						"value": true
					}
				]
			},
			"trigger": {
				"chunk": "function(event, data) {\n\n\t\t\tevent = typeof event === 'string' ? event : null;\n\t\t\tdata  = data instanceof Array     ? data  : null;\n\n\n\t\t\tlet result = _trigger.call(this, event, data);\n\t\t\tif (result === true && lychee.debug === true) {\n\n\t\t\t\tthis.___timeline.trigger.push({\n\t\t\t\t\ttime:  Date.now(),\n\t\t\t\t\tevent: event,\n\t\t\t\t\tdata:  lychee.serialize(data)\n\t\t\t\t});\n\n\t\t\t}\n\n\n\t\t\treturn result;\n\n\t\t}",
				"type": "function",
				"hash": "36be5193",
				"parameters": [
					{
						"chunk": "typeof event === 'string' ? event : null",
						"name": "event",
						"type": "String",
						"value": null
					},
					{
						"chunk": "data instanceof Array     ? data  : null",
						"name": "data",
						"type": "Array",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "result",
						"type": "Boolean",
						"value": true
					}
				]
			},
			"unbind": {
				"chunk": "function(event, callback, scope) {\n\n\t\t\tevent    = typeof event === 'string'    ? event    : null;\n\t\t\tcallback = callback instanceof Function ? callback : null;\n\t\t\tscope    = scope !== undefined          ? scope    : null;\n\n\n\t\t\tlet result = _unbind.call(this, event, callback, scope);\n\t\t\tif (result === true) {\n\n\t\t\t\tthis.___timeline.unbind.push({\n\t\t\t\t\ttime:     Date.now(),\n\t\t\t\t\tevent:    event,\n\t\t\t\t\tcallback: lychee.serialize(callback),\n\t\t\t\t\t// scope:    lychee.serialize(scope)\n\t\t\t\t\tscope:    null\n\t\t\t\t});\n\n\t\t\t}\n\n\n\t\t\treturn result;\n\n\t\t}",
				"type": "function",
				"hash": "798b75bf",
				"parameters": [
					{
						"chunk": "typeof event === 'string'    ? event    : null",
						"name": "event",
						"type": "String",
						"value": null
					},
					{
						"chunk": "callback instanceof Function ? callback : null",
						"name": "callback",
						"type": "Function",
						"value": null
					},
					{
						"chunk": "scope !== undefined          ? scope    : null",
						"name": "scope",
						"type": "Object",
						"value": {}
					}
				],
				"values": [
					{
						"chunk": "result",
						"type": "Boolean",
						"value": true
					}
				]
			}
		}
	}
}