{
	"header": {
		"identifier": "lychee.net.client.Session",
		"attaches": {},
		"tags": {},
		"requires": [],
		"includes": [
			"lychee.net.Service"
		],
		"supports": {},
		"type": "Composite"
	},
	"memory": {
		"_Service": {
			"chunk": "lychee.import('lychee.net.Service')",
			"type": "lychee.Definition",
			"hash": "1de466ca",
			"value": {
				"reference": "lychee.net.Service",
				"arguments": []
			}
		},
		"_id": {
			"chunk": "0",
			"type": "Number",
			"hash": "d271c07f",
			"value": 0
		}
	},
	"errors": [],
	"result": {
		"constructor": {
			"chunk": "function(id, client, data) {\n\n\t\tid = typeof id === 'string' ? id : 'session';\n\n\n\t\tlet states = Object.assign({}, data);\n\n\n\t\tthis.admin     = false;\n\t\tthis.autoadmin = true;\n\t\tthis.autolock  = true;\n\t\tthis.autostart = true;\n\t\tthis.min       = 2;\n\t\tthis.max       = 4;\n\t\tthis.sid       = 'session-' + _id++;\n\n\n\t\tthis.setAutoadmin(states.autoadmin);\n\t\tthis.setAutolock(states.autolock);\n\t\tthis.setAutostart(states.autostart);\n\t\tthis.setMax(states.max);\n\t\tthis.setMin(states.min);\n\t\tthis.setSid(states.sid);\n\n\t\tdelete states.autoadmin;\n\t\tdelete states.autolock;\n\t\tdelete states.autostart;\n\t\tdelete states.max;\n\t\tdelete states.min;\n\t\tdelete states.sid;\n\n\n\t\t_Service.call(this, id, client, _Service.TYPE.client);\n\n\n\n\t\t/*\n\t\t * INITIALIZATION\n\t\t */\n\n\t\tthis.bind('sync', function(data) {\n\n\t\t\tlet type = data.type;\n\t\t\tif (type === 'update') {\n\n\t\t\t\tthis.setAdmin(data.admin);\n\t\t\t\tthis.setSid(data.sid);\n\t\t\t\tthis.setMin(data.min);\n\t\t\t\tthis.setMax(data.max);\n\n\t\t\t}\n\n\n\t\t\tif (type === 'update' || type === 'start' || type === 'stop') {\n\n\t\t\t\tdelete data.type;\n\n\t\t\t\tthis.trigger(type, [ data ]);\n\n\t\t\t}\n\n\t\t}, this);\n\n\n\t\tif (lychee.debug === true) {\n\n\t\t\tthis.bind('error', function(error) {\n\t\t\t\tconsole.error('lychee.net.client.Session: ' + error.message);\n\t\t\t}, this);\n\n\t\t}\n\n\n\t\tstates = null;\n\n\t}",
			"type": "function",
			"hash": "c52c6eb1",
			"parameters": [
				{
					"chunk": "typeof id === 'string' ? id : 'session'",
					"name": "id",
					"type": "String",
					"value": "session"
				},
				{
					"chunk": null,
					"name": "client",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "data",
					"type": "undefined"
				}
			],
			"memory": [
				"_Service"
			]
		},
		"states": {
			"autoadmin": "setAutoadmin",
			"autolock": "setAutolock",
			"autostart": "setAutostart",
			"max": "setMax",
			"min": "setMin",
			"sid": "setSid"
		},
		"properties": {
			"admin": {
				"chunk": "this.admin     = false;",
				"type": "Boolean",
				"hash": "6674f8e5",
				"value": {
					"chunk": "false",
					"type": "Boolean",
					"hash": "d5619e17",
					"value": false
				}
			},
			"autoadmin": {
				"chunk": "this.autoadmin = true;",
				"type": "Boolean",
				"hash": "02fdb321",
				"value": {
					"chunk": "true",
					"type": "Boolean",
					"hash": "34edcf72",
					"value": true
				}
			},
			"autolock": {
				"chunk": "this.autolock  = true;",
				"type": "Boolean",
				"hash": "70e23698",
				"value": {
					"chunk": "true",
					"type": "Boolean",
					"hash": "34edcf72",
					"value": true
				}
			},
			"autostart": {
				"chunk": "this.autostart = true;",
				"type": "Boolean",
				"hash": "69333412",
				"value": {
					"chunk": "true",
					"type": "Boolean",
					"hash": "34edcf72",
					"value": true
				}
			},
			"min": {
				"chunk": "this.min       = 2;",
				"type": "Number",
				"hash": "ec37ff74",
				"value": {
					"chunk": "2",
					"type": "Number",
					"hash": "0129e217",
					"value": 2
				}
			},
			"max": {
				"chunk": "this.max       = 4;",
				"type": "Number",
				"hash": "e9ec1dd3",
				"value": {
					"chunk": "4",
					"type": "Number",
					"hash": "e131cc88",
					"value": 4
				}
			},
			"sid": {
				"chunk": "this.sid       = 'session-' + _id++;",
				"type": "String",
				"hash": "e9821dc5",
				"value": {
					"chunk": "'session-' + _id++",
					"type": "String",
					"hash": "827af82f",
					"value": "<string>"
				}
			}
		},
		"enums": {},
		"events": {
			"type": {
				"chunk": "function(data) {}",
				"name": "type",
				"type": "event",
				"hash": "06bb784a",
				"methods": [],
				"parameters": [
					{
						"chunk": "data",
						"type": "undefined",
						"hash": "3af4b6d3"
					}
				]
			}
		},
		"methods": {
			"deserialize": {
				"chunk": "function(blob) {\n\n\t\t\tif (blob.admin === true) {\n\t\t\t\tthis.setAdmin(true);\n\t\t\t}\n\n\t\t}",
				"type": "function",
				"hash": "92df58f0",
				"memory": [],
				"parameters": [
					{
						"chunk": null,
						"name": "blob",
						"type": "undefined"
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"serialize": {
				"chunk": "function() {\n\n\t\t\tlet data = _Service.prototype.serialize.call(this);\n\t\t\tdata['constructor'] = 'lychee.net.client.Session';\n\n\t\t\tlet states = {};\n\t\t\tlet blob   = (data['blob'] || {});\n\n\n\t\t\tif (this.autoadmin !== true)                   states.autoadmin = this.autoadmin;\n\t\t\tif (this.autolock !== true)                    states.autolock  = this.autolock;\n\t\t\tif (this.autostart !== true)                   states.autostart = this.autostart;\n\t\t\tif (this.max !== 4)                            states.max       = this.max;\n\t\t\tif (this.min !== 2)                            states.min       = this.min;\n\t\t\tif (this.sid.startsWith('session-') === false) states.sid       = this.sid;\n\n\n\t\t\tif (this.admin !== false) blob.admin = this.admin;\n\n\n\t\t\tdata['arguments'][2] = states;\n\t\t\tdata['blob']         = Object.keys(blob).length > 0 ? blob : null;\n\n\n\t\t\treturn data;\n\n\t\t}",
				"type": "function",
				"hash": "b1369d",
				"memory": [
					"_Service"
				],
				"parameters": [],
				"values": [
					{
						"chunk": "{ 'constructor': 'lychee.event.Emitter',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t}",
						"type": "Object",
						"value": {}
					}
				]
			},
			"join": {
				"chunk": "function() {\n\n\t\t\tif (this.sid !== null) {\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tif (lychee.debug === true) {\n\t\t\t\t\t\tconsole.log('lychee.net.client.Session: Joining session \"' + this.sid + '\"');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tautoadmin: this.autoadmin,\n\t\t\t\t\t\tautolock:  this.autolock,\n\t\t\t\t\t\tautostart: this.autostart,\n\t\t\t\t\t\tsid:       this.sid,\n\t\t\t\t\t\tmin:       this.min,\n\t\t\t\t\t\tmax:       this.max\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'join'\n\t\t\t\t\t});\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}",
				"type": "function",
				"hash": "6cdf8eff",
				"memory": [],
				"parameters": [],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					}
				]
			},
			"start": {
				"chunk": "function() {\n\n\t\t\tif (this.sid !== null) {\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tsid: this.sid\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'start'\n\t\t\t\t\t});\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "2ae426fa",
				"memory": [],
				"parameters": [],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"stop": {
				"chunk": "function() {\n\n\t\t\tif (this.sid !== null) {\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tsid: this.sid\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'stop'\n\t\t\t\t\t});\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "127f5a10",
				"memory": [],
				"parameters": [],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"leave": {
				"chunk": "function() {\n\n\t\t\tif (this.sid !== null) {\n\n\t\t\t\tif (this.tunnel !== null) {\n\n\t\t\t\t\tif (lychee.debug === true) {\n\t\t\t\t\t\tconsole.log('lychee.net.client.Session: Leaving session \"' + this.sid + '\"');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.tunnel.send({\n\t\t\t\t\t\tsid:   this.sid\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid:    this.id,\n\t\t\t\t\t\tevent: 'leave'\n\t\t\t\t\t});\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "2a87bbef",
				"memory": [],
				"parameters": [],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"setAdmin": {
				"chunk": "function(admin) {\n\n\t\t\tadmin = typeof admin === 'boolean' ? admin : null;\n\n\n\t\t\tif (admin !== null) {\n\n\t\t\t\tthis.admin = admin;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "1a7c9466",
				"memory": [],
				"parameters": [
					{
						"chunk": "typeof admin === 'boolean' ? admin : null",
						"name": "admin",
						"type": "Boolean",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"setAutoadmin": {
				"chunk": "function(autoadmin) {\n\n\t\t\tautoadmin = typeof autoadmin === 'boolean' ? autoadmin : null;\n\n\n\t\t\tif (autoadmin !== null) {\n\n\t\t\t\tthis.autoadmin = autoadmin;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "f0dfaa91",
				"memory": [],
				"parameters": [
					{
						"chunk": "typeof autoadmin === 'boolean' ? autoadmin : null",
						"name": "autoadmin",
						"type": "Boolean",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"setAutolock": {
				"chunk": "function(autolock) {\n\n\t\t\tautolock = typeof autolock === 'boolean' ? autolock : null;\n\n\n\t\t\tif (autolock !== null) {\n\n\t\t\t\tthis.autolock = autolock;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "0c75841a",
				"memory": [],
				"parameters": [
					{
						"chunk": "typeof autolock === 'boolean' ? autolock : null",
						"name": "autolock",
						"type": "Boolean",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"setAutostart": {
				"chunk": "function(autostart) {\n\n\t\t\tautostart = typeof autostart === 'boolean' ? autostart : null;\n\n\n\t\t\tif (autostart !== null) {\n\n\t\t\t\tthis.autostart = autostart;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "a4d6d33b",
				"memory": [],
				"parameters": [
					{
						"chunk": "typeof autostart === 'boolean' ? autostart : null",
						"name": "autostart",
						"type": "Boolean",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"setMax": {
				"chunk": "function(max) {\n\n\t\t\tmax = typeof max === 'number' ? max : null;\n\n\n\t\t\tif (max !== null) {\n\n\t\t\t\tthis.max = max;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "6aec857d",
				"memory": [],
				"parameters": [
					{
						"chunk": "typeof max === 'number' ? max : null",
						"name": "max",
						"type": "Number",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"setMin": {
				"chunk": "function(min) {\n\n\t\t\tmin = typeof min === 'number' ? min : null;\n\n\n\t\t\tif (min !== null) {\n\n\t\t\t\tthis.min = min;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "efffbb93",
				"memory": [],
				"parameters": [
					{
						"chunk": "typeof min === 'number' ? min : null",
						"name": "min",
						"type": "Number",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"setSid": {
				"chunk": "function(sid) {\n\n\t\t\tsid = typeof sid === 'string' ? sid : null;\n\n\n\t\t\tif (sid !== null) {\n\n\t\t\t\tthis.sid = sid;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "2fb7c513",
				"memory": [],
				"parameters": [
					{
						"chunk": "typeof sid === 'string' ? sid : null",
						"name": "sid",
						"type": "String",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			}
		}
	}
}