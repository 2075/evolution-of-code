{
	"header": {
		"identifier": "lychee.ui.entity.Helper",
		"attaches": {},
		"tags": {
			"platform": "node"
		},
		"requires": [],
		"includes": [
			"lychee.ui.entity.Button"
		],
		"supports": {
			"body": "function(lychee, global) {\n\n\tif (typeof global.require === 'function') {\n\n\t\ttry {\n\n\t\t\tglobal.require('child_process');\n\n\t\t\treturn true;\n\n\t\t} catch (err) {\n\n\t\t}\n\n\t}\n\n\n\treturn false;\n\n}",
			"hash": "8aa3196c",
			"parameters": [
				{
					"chunk": null,
					"name": "lychee",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "global",
					"type": "undefined"
				}
			]
		},
		"type": "Composite"
	},
	"memory": {
		"_child_process": {
			"chunk": "{}",
			"type": "Object",
			"hash": "5c211bfa",
			"value": {}
		},
		"_Button": {
			"chunk": "lychee.import('lychee.ui.entity.Button')",
			"type": "lychee.Definition",
			"hash": "b3693ec1",
			"value": {
				"reference": "lychee.ui.entity.Button",
				"arguments": []
			}
		},
		"_CONFIG": {
			"chunk": "attachments[\"json\"].buffer",
			"type": "undefined",
			"hash": "b8ed9603"
		},
		"_TEXTURE": {
			"chunk": "attachments[\"png\"]",
			"type": "Texture",
			"hash": "44097138",
			"value": {
				"constructor": "Texture",
				"arguments": []
			}
		},
		"_ROOT": {
			"chunk": "lychee.ROOT.lychee",
			"type": "undefined",
			"hash": "815a3858"
		},
		"_is_value": {
			"chunk": "function(value) {\n\n\t\tvalue = typeof value === 'string' ? value : null;\n\n\n\t\tif (value !== null) {\n\n\t\t\tlet action   = value.split('=')[0] || '';\n\t\t\tlet resource = value.split('=')[1] || '';\n\t\t\tlet data     = value.split('=')[2] || '';\n\n\n\t\t\tif (action === 'boot' && resource !== '') {\n\n\t\t\t\treturn true;\n\n\t\t\t} else if (action === 'profile' && resource !== '' && data !== '') {\n\n\t\t\t\treturn true;\n\n\t\t\t} else if (action === 'unboot') {\n\n\t\t\t\treturn true;\n\n\t\t\t} else if (/^(start|stop|edit|file|web)$/g.test(action) && resource !== '') {\n\n\t\t\t\treturn true;\n\n\t\t\t} else if (action === 'refresh') {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn false;\n\n\t}",
			"type": "function",
			"hash": "d0b60047",
			"memory": [],
			"parameters": [
				{
					"chunk": "typeof value === 'string' ? value : null",
					"name": "value",
					"type": "String",
					"value": null
				}
			],
			"values": [
				{
					"chunk": "true",
					"type": "Boolean",
					"value": true
				},
				{
					"chunk": "false",
					"type": "Boolean",
					"value": false
				}
			]
		},
		"_help": {
			"chunk": "function(value) {\n\n\t\tlet action = value.split('=')[0];\n\t\tlet result = false;\n\n\n\t\tif (action === 'refresh') {\n\n\t\t\t// TODO: How to refresh the local program?\n\t\t\t// Restart with same arguments might fail due to serialization.\n\n\t\t} else {\n\n\t\t\ttry {\n\n\t\t\t\tlet helper = _child_process.execFile(_ROOT + '/bin/helper.sh', [\n\t\t\t\t\t'lycheejs://' + value\n\t\t\t\t], {\n\t\t\t\t\tcwd: _ROOT\n\t\t\t\t}, function(error, stdout, stderr) {\n\n\t\t\t\t\tstderr = (stderr.trim() || '').toString();\n\n\t\t\t\t\tif (stderr !== '') {\n\n\t\t\t\t\t\tif (lychee.debug === true) {\n\n\t\t\t\t\t\t\tstderr.trim().split('\\n').forEach(function(line) {\n\t\t\t\t\t\t\t\tconsole.error('lychee.ui.entity.Helper: \"' + line.trim() + '\"');\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\thelper.stdout.on('data', function(lines) {});\n\t\t\t\thelper.stderr.on('data', function(lines) {});\n\n\t\t\t\thelper.on('error', function() {\n\t\t\t\t\tthis.kill('SIGTERM');\n\t\t\t\t});\n\n\t\t\t\thelper.on('exit', function(code) {});\n\n\t\t\t\tresult = true;\n\n\t\t\t} catch (err) {\n\n\t\t\t\tresult = false;\n\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn result;\n\n\t}",
			"type": "function",
			"hash": "09b48e99",
			"memory": [
				"_ROOT",
				"_child_process"
			],
			"parameters": [
				{
					"chunk": null,
					"name": "value",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "result",
					"type": "Boolean",
					"value": true
				}
			]
		}
	},
	"errors": [],
	"result": {
		"constructor": {
			"chunk": "function(data) {\n\n\t\tlet states = Object.assign({\n\t\t\tlabel: 'HELPER'\n\t\t}, data);\n\n\n\t\tthis.__action = null;\n\n\n\t\t_Button.call(this, states);\n\n\t\tstates = null;\n\n\n\n\t\t/*\n\t\t * INITIALIZATION\n\t\t */\n\n\t\tthis.bind('change', function(value) {\n\t\t\treturn _help(value);\n\t\t}, this);\n\n\t}",
			"type": "function",
			"hash": "5c78c14f",
			"parameters": [
				{
					"chunk": null,
					"name": "data",
					"type": "Object"
				}
			],
			"memory": [
				"_Button",
				"_help"
			]
		},
		"states": {},
		"properties": {
			"__action": {
				"chunk": "this.__action = null;",
				"type": "null",
				"hash": "9deb4636",
				"value": {
					"chunk": "null",
					"type": "null",
					"hash": "66f07992",
					"value": null
				}
			}
		},
		"enums": {},
		"events": {},
		"methods": {
			"deserialize": {
				"chunk": "function(blob) {}",
				"type": "function",
				"hash": "cf6d9c5f",
				"memory": [],
				"parameters": [
					{
						"name": "blob",
						"type": "SerializationBlob",
						"value": {}
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"serialize": {
				"chunk": "function() {\n\n\t\t\tlet data = _Button.prototype.serialize.call(this);\n\t\t\tdata['constructor'] = 'lychee.ui.entity.Helper';\n\n\n\t\t\treturn data;\n\n\t\t}",
				"type": "function",
				"hash": "9f302b7b",
				"memory": [
					"_Button"
				],
				"parameters": [],
				"values": [
					{
						"chunk": "{ 'constructor': 'lychee.event.Emitter',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t}",
						"type": "Object",
						"value": {}
					}
				]
			},
			"render": {
				"chunk": "function(renderer, offsetX, offsetY) {\n\n\t\t\tif (this.visible === false) return;\n\n\n\t\t\tlet action   = this.__action;\n\t\t\tlet alpha    = this.alpha;\n\t\t\tlet font     = this.font;\n\t\t\tlet label    = this.label;\n\t\t\tlet position = this.position;\n\t\t\tlet x        = position.x + offsetX;\n\t\t\tlet y        = position.y + offsetY;\n\t\t\tlet hwidth   = this.width  / 2;\n\t\t\tlet hheight  = this.height / 2;\n\n\n\t\t\tif (alpha !== 1) {\n\t\t\t\trenderer.setAlpha(alpha);\n\t\t\t}\n\n\n\t\t\trenderer.drawBox(\n\t\t\t\tx - hwidth,\n\t\t\t\ty - hheight,\n\t\t\t\tx + hwidth,\n\t\t\t\ty + hheight,\n\t\t\t\t'#545454',\n\t\t\t\ttrue\n\t\t\t);\n\n\n\t\t\tlet pulse = this.__pulse;\n\t\t\tif (pulse.active === true) {\n\n\t\t\t\trenderer.setAlpha(pulse.alpha);\n\n\t\t\t\trenderer.drawBox(\n\t\t\t\t\tx - hwidth,\n\t\t\t\t\ty - hheight,\n\t\t\t\t\tx + hwidth,\n\t\t\t\t\ty + hheight,\n\t\t\t\t\t'#32afe5',\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\t\trenderer.setAlpha(1.0);\n\n\t\t\t}\n\n\n\t\t\tif (action !== null) {\n\n\t\t\t\tlet map = _CONFIG.map[action] || null;\n\t\t\t\tif (map !== null) {\n\n\t\t\t\t\tif (this.width > 96) {\n\n\t\t\t\t\t\trenderer.drawSprite(\n\t\t\t\t\t\t\tx - hwidth,\n\t\t\t\t\t\t\ty - hheight,\n\t\t\t\t\t\t\t_TEXTURE,\n\t\t\t\t\t\t\tmap[0]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\trenderer.drawText(\n\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\tfont,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.drawSprite(\n\t\t\t\t\t\t\tx - map[0].w / 2,\n\t\t\t\t\t\t\ty - hheight,\n\t\t\t\t\t\t\t_TEXTURE,\n\t\t\t\t\t\t\tmap[0]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if (label !== null && font !== null) {\n\n\t\t\t\t\trenderer.drawText(\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tfont,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if (label !== null && font !== null) {\n\n\t\t\t\trenderer.drawText(\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tlabel,\n\t\t\t\t\tfont,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\t}\n\n\n\t\t\tif (alpha !== 1) {\n\t\t\t\trenderer.setAlpha(1.0);\n\t\t\t}\n\n\t\t}",
				"type": "function",
				"hash": "ff033886",
				"memory": [
					"_CONFIG",
					"_TEXTURE"
				],
				"parameters": [
					{
						"chunk": null,
						"name": "renderer",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "offsetX",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "offsetY",
						"type": "undefined"
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"setValue": {
				"chunk": "function(value) {\n\n\t\t\tvalue = typeof value === 'string' ? value : null;\n\n\n\t\t\tif (value !== null && _is_value(value) === true) {\n\n\t\t\t\tthis.value    = value;\n\t\t\t\tthis.__action = value.split('=')[0] || null;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "b05372fd",
				"memory": [],
				"parameters": [
					{
						"chunk": "typeof value === 'string' ? value : null",
						"name": "value",
						"type": "String",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			}
		}
	}
}