{
	"header": {
		"identifier": "lychee.Viewport",
		"attaches": {},
		"tags": {
			"platform": "nidium"
		},
		"requires": [],
		"includes": [
			"lychee.event.Emitter"
		],
		"supports": {
			"body": "function(lychee, global) {\n\n\tif (\n\t\ttypeof global.window !== 'undefined'\n\t\t&& typeof global.window.innerWidth === 'number'\n\t\t&& typeof global.window.innerHeight === 'number'\n\t\t&& typeof global.window.__nidium__ === 'object'\n\t) {\n\n\t\treturn true;\n\n\t}\n\n\n\treturn false;\n\n}",
			"hash": "ed034524",
			"parameters": [
				{
					"chunk": null,
					"name": "lychee",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "global",
					"type": "undefined"
				}
			]
		},
		"type": "Composite"
	},
	"memory": {
		"_Emitter": {
			"chunk": "lychee.import('lychee.event.Emitter')",
			"type": "lychee.Definition",
			"hash": "b60271ea",
			"value": {
				"reference": "lychee.event.Emitter",
				"arguments": []
			}
		},
		"_INSTANCES": {
			"chunk": "[]",
			"type": "Array",
			"hash": "30f4c306",
			"value": []
		},
		"_window": {
			"chunk": "global.window || null",
			"type": "Object",
			"hash": "eefd7b9d",
			"value": {}
		},
		"_focusactive": {
			"chunk": "true",
			"type": "Boolean",
			"hash": "34edcf72",
			"value": true
		},
		"_listeners": {
			"chunk": "{\n\n\t\tfocus: function() {\n\n\t\t\tif (_focusactive === false) {\n\n\t\t\t\tfor (let i = 0, l = _INSTANCES.length; i < l; i++) {\n\t\t\t\t\t_process_show.call(_INSTANCES[i]);\n\t\t\t\t}\n\n\t\t\t\t_focusactive = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tblur: function() {\n\n\t\t\tif (_focusactive === true) {\n\n\t\t\t\tfor (let i = 0, l = _INSTANCES.length; i < l; i++) {\n\t\t\t\t\t_process_hide.call(_INSTANCES[i]);\n\t\t\t\t}\n\n\t\t\t\t_focusactive = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}",
			"type": "Boolean",
			"hash": "58de37b0",
			"value": true
		},
		"_process_show": {
			"chunk": "function() {\n\n\t\treturn this.trigger('show');\n\n\t}",
			"type": "function",
			"hash": "e1fe8bc5",
			"memory": [],
			"parameters": [],
			"values": [
				{
					"chunk": "this.trigger('show')",
					"type": "undefined",
					"value": {
						"reference": "this.trigger('show')",
						"arguments": []
					}
				}
			]
		},
		"_process_hide": {
			"chunk": "function() {\n\n\t\treturn this.trigger('hide');\n\n\t}",
			"type": "function",
			"hash": "9488e2b6",
			"memory": [],
			"parameters": [],
			"values": [
				{
					"chunk": "this.trigger('hide')",
					"type": "undefined",
					"value": {
						"reference": "this.trigger('hide')",
						"arguments": []
					}
				}
			]
		},
		"_process_reshape": {
			"chunk": "function(width, height) {\n\n\t\tif (width === this.width && height === this.height) {\n\t\t\treturn false;\n\t\t}\n\n\n\t\tthis.width  = width;\n\t\tthis.height = height;\n\n\n\t\tlet orientation = null;\n\t\tlet rotation    = null;\n\n\n\t\tif (width > height) {\n\n\t\t\torientation = 'landscape';\n\t\t\trotation    = 'landscape';\n\n\t\t} else {\n\n\t\t\torientation = 'portrait';\n\t\t\trotation    = 'portrait';\n\n\t\t}\n\n\n\t\treturn this.trigger('reshape', [ orientation, rotation, width, height ]);\n\n\t}",
			"type": "function",
			"hash": "15b689f8",
			"memory": [],
			"parameters": [
				{
					"chunk": null,
					"name": "width",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "height",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "false",
					"type": "Boolean",
					"value": false
				},
				{
					"chunk": "this.trigger('reshape', [ orientation, rotation, width, height ])",
					"type": "undefined",
					"value": {
						"reference": "this.trigger('reshape', [ orientation, rotation, width, height ])",
						"arguments": []
					}
				}
			]
		}
	},
	"errors": [],
	"result": {
		"constructor": {
			"chunk": "function(data) {\n\n\t\tlet states = Object.assign({}, data);\n\n\n\t\tthis.fullscreen = false;\n\t\tthis.width      = _window.innerWidth  | 0;\n\t\tthis.height     = _window.innerHeight | 0;\n\n\n\t\t_Emitter.call(this);\n\n\t\t_INSTANCES.push(this);\n\n\n\t\tthis.setFullscreen(states.fullscreen);\n\n\n\n\t\t/*\n\t\t * INITIALIZATION\n\t\t */\n\n\t\tsetTimeout(function() {\n\n\t\t\tthis.width  = 0;\n\t\t\tthis.height = 0;\n\n\t\t\t_process_reshape.call(this, _window.innerWidth | 0, _window.innerHeight | 0);\n\n\t\t}.bind(this), 100);\n\n\n\t\tstates = null;\n\n\t}",
			"type": "function",
			"hash": "53f8fcef",
			"parameters": [
				{
					"chunk": null,
					"name": "data",
					"type": "Object"
				}
			],
			"memory": [
				"_Emitter",
				"_INSTANCES",
				"_process_reshape",
				"_window"
			]
		},
		"states": {
			"fullscreen": "setFullscreen"
		},
		"properties": {
			"fullscreen": {
				"chunk": "this.fullscreen = false;",
				"type": "Boolean",
				"hash": "8cec35c8",
				"value": {
					"chunk": "false",
					"type": "Boolean",
					"hash": "d5619e17",
					"value": false
				}
			},
			"width": {
				"chunk": "this.width      = _window.innerWidth  | 0;",
				"type": "Number",
				"hash": "6bf35788",
				"value": {
					"chunk": "_window.innerWidth  | 0",
					"type": "Number",
					"hash": "1c22b4fe",
					"value": 1337
				}
			},
			"height": {
				"chunk": "this.height     = _window.innerHeight | 0;",
				"type": "Number",
				"hash": "d3af9526",
				"value": {
					"chunk": "_window.innerHeight | 0",
					"type": "Number",
					"hash": "88a0e178",
					"value": 1337
				}
			}
		},
		"enums": {},
		"events": {},
		"methods": {
			"deserialize": {
				"chunk": "function(blob) {}",
				"type": "function",
				"hash": "cf6d9c5f",
				"memory": [],
				"parameters": [
					{
						"name": "blob",
						"type": "SerializationBlob",
						"value": {}
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"destroy": {
				"chunk": "function() {\n\n\t\t\tlet found = false;\n\n\t\t\tfor (let i = 0, il = _INSTANCES.length; i < il; i++) {\n\n\t\t\t\tif (_INSTANCES[i] === this) {\n\t\t\t\t\t_INSTANCES.splice(i, 1);\n\t\t\t\t\tfound = true;\n\t\t\t\t\til--;\n\t\t\t\t\ti--;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.unbind();\n\n\n\t\t\treturn found;\n\n\t\t}",
				"type": "function",
				"hash": "a596dbf3",
				"memory": [
					"_INSTANCES"
				],
				"parameters": [],
				"values": [
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					},
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					}
				]
			},
			"serialize": {
				"chunk": "function() {\n\n\t\t\tlet data = _Emitter.prototype.serialize.call(this);\n\t\t\tdata['constructor'] = 'lychee.Viewport';\n\n\t\t\tlet states = {};\n\n\n\t\t\tif (this.fullscreen !== false) states.fullscreen = this.fullscreen;\n\n\n\t\t\tdata['arguments'][0] = states;\n\n\n\t\t\treturn data;\n\n\t\t}",
				"type": "function",
				"hash": "cf868d0c",
				"memory": [
					"_Emitter"
				],
				"parameters": [],
				"values": [
					{
						"chunk": "{ 'constructor': 'lychee.event.Emitter',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t}",
						"type": "Object",
						"value": {}
					}
				]
			},
			"setFullscreen": {
				"chunk": "function(fullscreen) {\n\n\t\t\tfullscreen = typeof fullscreen === 'boolean' ? fullscreen : null;\n\n\n\t\t\tif (fullscreen !== null) {\n\n\t\t\t\t// XXX: No Fullscreen support\n\t\t\t\t// https://github.com/nidium/Nidium/issues/65\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "f67fd165",
				"memory": [],
				"parameters": [
					{
						"chunk": "typeof fullscreen === 'boolean' ? fullscreen : null",
						"name": "fullscreen",
						"type": "Boolean",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			}
		}
	}
}