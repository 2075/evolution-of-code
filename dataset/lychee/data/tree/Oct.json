{
	"header": {
		"identifier": "lychee.data.tree.Oct",
		"attaches": {},
		"tags": {},
		"requires": [],
		"includes": [],
		"supports": {},
		"type": "Composite"
	},
	"memory": {
		"_Quadrant": {
			"chunk": "function(x1, y1, z1, x2, y2, z2) {\n\n\t\tthis.x1 = x1;\n\t\tthis.y1 = y1;\n\t\tthis.z1 = z1;\n\t\tthis.x2 = x2;\n\t\tthis.y2 = y2;\n\t\tthis.z2 = z2;\n\n\t\tthis.entities  = [];\n\t\tthis.quadrants = [];\n\n\t}",
			"type": "function",
			"hash": "03a59c41",
			"memory": [],
			"parameters": [
				{
					"chunk": null,
					"name": "x1",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "y1",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "z1",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "x2",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "y2",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "z2",
					"type": "undefined"
				}
			],
			"values": []
		},
		"_validate_entity": {
			"chunk": "function(entity) {\n\n\t\tif (\n\t\t\tentity instanceof Object\n\t\t\t&& entity.position instanceof Object\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\n\t\treturn false;\n\n\t}",
			"type": "function",
			"hash": "3366100b",
			"memory": [],
			"parameters": [
				{
					"chunk": null,
					"name": "entity",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "true",
					"type": "Boolean",
					"value": true
				},
				{
					"chunk": "false",
					"type": "Boolean",
					"value": false
				}
			]
		},
		"_traverse_filter": {
			"chunk": "function(callback, scope) {\n\n\t\tlet filtered = [];\n\t\tlet queue    = [ this.__root ];\n\n\t\twhile (queue.length > 0) {\n\n\t\t\tlet quadrant  = queue.shift();\n\t\t\tlet entities  = quadrant.entities;\n\t\t\tlet quadrants = quadrant.quadrants;\n\n\t\t\tif (entities.length > 0) {\n\n\t\t\t\tfor (let e = 0, el = entities.length; e < el; e++) {\n\n\t\t\t\t\tlet entity = entities[e];\n\t\t\t\t\tif (callback.call(scope, entity) === true) {\n\t\t\t\t\t\tfiltered.push(entity);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (quadrants.length > 0) {\n\n\t\t\t\tfor (let q = 0, ql = quadrants.length; q < ql; q++) {\n\t\t\t\t\tqueue.push(quadrants[q]);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn filtered;\n\n\t}",
			"type": "function",
			"hash": "5859e6e9",
			"memory": [],
			"parameters": [
				{
					"chunk": null,
					"name": "callback",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "scope",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "[]",
					"type": "Array",
					"value": []
				}
			]
		},
		"_traverse_find": {
			"chunk": "function(callback, scope) {\n\n\t\tlet found = null;\n\t\tlet queue = [ this.__root ];\n\n\t\twhile (queue.length > 0) {\n\n\t\t\tlet quadrant  = queue.shift();\n\t\t\tlet entities  = quadrant.entities;\n\t\t\tlet quadrants = quadrant.quadrants;\n\n\t\t\tif (entities.length > 0) {\n\n\t\t\t\tfor (let e = 0, el = entities.length; e < el; e++) {\n\n\t\t\t\t\tlet entity = entities[e];\n\t\t\t\t\tif (callback.call(scope, entity) === true) {\n\t\t\t\t\t\tfound = entity;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (quadrants.length > 0) {\n\n\t\t\t\tfor (let q = 0, ql = quadrants.length; q < ql; q++) {\n\t\t\t\t\tqueue.push(quadrants[q]);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn found;\n\n\t}",
			"type": "function",
			"hash": "86f446e9",
			"memory": [],
			"parameters": [
				{
					"chunk": null,
					"name": "callback",
					"type": "undefined"
				},
				{
					"chunk": null,
					"name": "scope",
					"type": "undefined"
				}
			],
			"values": [
				{
					"chunk": "null",
					"type": "null",
					"value": null
				},
				{
					"chunk": "entity",
					"type": "lychee.app.Entity",
					"value": {
						"constructor": "lychee.app.Entity",
						"arguments": []
					}
				}
			]
		}
	},
	"errors": [],
	"result": {
		"constructor": {
			"chunk": "function(data) {\n\n\t\tlet states = Object.assign({}, data);\n\n\n\t\tthis.__root = new _Quadrant(\n\t\t\t-Number.MAX_SAFE_INTEGER,\n\t\t\t-Number.MAX_SAFE_INTEGER,\n\t\t\t-Number.MAX_SAFE_INTEGER,\n\t\t\t+Number.MAX_SAFE_INTEGER,\n\t\t\t+Number.MAX_SAFE_INTEGER,\n\t\t\t+Number.MAX_SAFE_INTEGER\n\t\t);\n\n\n\t\tthis.setEntities(states.entities);\n\n\t\tstates = null;\n\n\t}",
			"type": "function",
			"hash": "d33467be",
			"parameters": [
				{
					"chunk": null,
					"name": "data",
					"type": "Object"
				}
			],
			"memory": []
		},
		"states": {
			"entities": "setEntities"
		},
		"properties": {},
		"enums": {},
		"events": {},
		"methods": {
			"deserialize": {
				"chunk": "function(blob) {\n\n\t\t\tif (blob.entities instanceof Array) {\n\n\t\t\t\tfor (let e = 0, el = blob.entities.length; e < el; e++) {\n\n\t\t\t\t\tlet entity = lychee.deserialize(blob.entities[e]);\n\t\t\t\t\tif (entity !== null) {\n\t\t\t\t\t\tthis.addEntity(entity.position, entity);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}",
				"type": "function",
				"hash": "daa7c734",
				"memory": [],
				"parameters": [
					{
						"chunk": null,
						"name": "blob",
						"type": "undefined"
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"serialize": {
				"chunk": "function() {\n\n\t\t\tlet blob = {};\n\n\n\t\t\tlet root = this.__root;\n\t\t\tif (root.quadrants.length > 0) {\n\n\t\t\t\tblob.entities = lychee.serialize(root);\n\n\t\t\t} else if (root.entities.length > 0) {\n\n\t\t\t\tblob.entities = root.entities.map(lychee.serialize);\n\n\t\t\t}\n\n\n\t\t\treturn {\n\t\t\t\t'constructor': 'lychee.data.tree.Oct',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t};\n\n\t\t}",
				"type": "function",
				"hash": "6538039f",
				"memory": [],
				"parameters": [],
				"values": [
					{
						"chunk": "{ 'constructor': 'lychee.data.tree.Oct',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t}",
						"type": "Object",
						"value": {}
					}
				]
			},
			"filter": {
				"chunk": "function(callback, scope) {\n\n\t\t\tcallback = callback instanceof Function ? callback : null;\n\t\t\tscope    = scope !== undefined          ? scope    : this;\n\n\n\t\t\tlet filtered = [];\n\n\t\t\tif (callback !== null) {\n\t\t\t\t_traverse_filter.call(this, filtered, callback, scope);\n\t\t\t}\n\n\t\t\treturn filtered;\n\n\t\t}",
				"type": "function",
				"hash": "e79b674e",
				"memory": [
					"_traverse_filter"
				],
				"parameters": [
					{
						"chunk": "callback instanceof Function ? callback : null",
						"name": "callback",
						"type": "Function",
						"value": null
					},
					{
						"chunk": "scope !== undefined          ? scope    : this",
						"name": "scope",
						"type": "Object",
						"value": {}
					}
				],
				"values": [
					{
						"chunk": "[]",
						"type": "Array",
						"value": []
					}
				]
			},
			"find": {
				"chunk": "function(callback, scope) {\n\n\t\t\tcallback = callback instanceof Function ? callback : null;\n\t\t\tscope    = scope !== undefined          ? scope    : this;\n\n\n\t\t\tif (callback !== null) {\n\t\t\t\treturn _traverse_find.call(this, callback, scope);\n\t\t\t}\n\n\n\t\t\treturn null;\n\n\t\t}",
				"type": "function",
				"hash": "cfb8f172",
				"memory": [
					"_traverse_find"
				],
				"parameters": [
					{
						"chunk": "callback instanceof Function ? callback : null",
						"name": "callback",
						"type": "Function",
						"value": null
					},
					{
						"chunk": "scope !== undefined          ? scope    : this",
						"name": "scope",
						"type": "Object",
						"value": {}
					}
				],
				"values": [
					{
						"chunk": "null",
						"type": "null",
						"value": null
					},
					{
						"chunk": "null",
						"type": "null",
						"value": null
					},
					{
						"chunk": "entity",
						"type": "lychee.app.Entity",
						"value": {
							"constructor": "lychee.app.Entity",
							"arguments": []
						}
					}
				]
			},
			"addEntity": {
				"chunk": "function(entity) {\n\n\t\t\tentity = _validate_entity(entity) === true ? entity : null;\n\n\n\t\t\tif (entity !== null) {\n\t\t\t\treturn this.__root.insert(entity.position, entity);\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "4536620e",
				"memory": [
					"_validate_entity"
				],
				"parameters": [
					{
						"chunk": "_validate_entity(entity) === true ? entity : null",
						"name": "entity",
						"type": "lychee.app.Entity",
						"value": {
							"constructor": "lychee.app.Entity",
							"arguments": []
						}
					}
				],
				"values": [
					{
						"chunk": "this.__root.insert(entity.position, entity)",
						"type": "undefined",
						"value": {
							"reference": "this.__root.insert(entity.position, entity)",
							"arguments": []
						}
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"removeEntity": {
				"chunk": "function(entity) {\n\n\t\t\tentity = _validate_entity(entity) === true ? entity : null;\n\n\n\t\t\tif (entity !== null) {\n\t\t\t\treturn this.__root.remove(entity.position, entity);\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "f34dfd56",
				"memory": [
					"_validate_entity"
				],
				"parameters": [
					{
						"chunk": "_validate_entity(entity) === true ? entity : null",
						"name": "entity",
						"type": "lychee.app.Entity",
						"value": {
							"constructor": "lychee.app.Entity",
							"arguments": []
						}
					}
				],
				"values": [
					{
						"chunk": "this.__root.remove(entity.position, entity)",
						"type": "undefined",
						"value": {
							"reference": "this.__root.remove(entity.position, entity)",
							"arguments": []
						}
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"setEntities": {
				"chunk": "function(entities) {\n\n\t\t\tentities = entities instanceof Array ? entities : null;\n\n\n\t\t\tlet all = true;\n\n\t\t\tif (entities !== null) {\n\n\t\t\t\tfor (let e = 0, el = entities.length; e < el; e++) {\n\n\t\t\t\t\tlet result = this.addEntity(entities[e]);\n\t\t\t\t\tif (result === false) {\n\t\t\t\t\t\tall = false;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn all;\n\n\t\t}",
				"type": "function",
				"hash": "bbf2adbe",
				"memory": [],
				"parameters": [
					{
						"chunk": "entities instanceof Array ? entities : null",
						"name": "entities",
						"type": "Array",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"removeEntities": {
				"chunk": "function() {\n\n\t\t\tlet root = this.__root;\n\n\t\t\tif (root.entities.length > 0) {\n\t\t\t\tdelete root.entities;\n\t\t\t\troot.entities = [];\n\t\t\t}\n\n\t\t\tif (root.quadrants.length > 0) {\n\t\t\t\tdelete root.quadrants;\n\t\t\t\troot.quadrants = [];\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}",
				"type": "function",
				"hash": "a1870d6d",
				"memory": [],
				"parameters": [],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					}
				]
			}
		}
	}
}