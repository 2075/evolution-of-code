{
	"header": {
		"identifier": "lychee.verlet.Layer",
		"attaches": {},
		"tags": {},
		"requires": [
			"lychee.math.Vector3"
		],
		"includes": [
			"lychee.app.Layer"
		],
		"supports": {},
		"type": "Composite"
	},
	"memory": {
		"_Layer": {
			"chunk": "lychee.import('lychee.app.Layer')",
			"type": "lychee.Definition",
			"hash": "6f9d1207",
			"value": {
				"reference": "lychee.app.Layer",
				"arguments": []
			}
		},
		"_Vector3": {
			"chunk": "lychee.import('lychee.math.Vector3')",
			"type": "lychee.Definition",
			"hash": "0ab205ed",
			"value": {
				"reference": "lychee.math.Vector3",
				"arguments": []
			}
		}
	},
	"errors": [],
	"result": {
		"constructor": {
			"chunk": "function(data) {\n\n\t\tlet states = Object.assign({}, data);\n\n\n\t\tthis.friction   = 0.99;\n\t\tthis.gravity    = new _Vector3({ x: 0, y: 1, z: 0 });\n\n\t\tthis.__velocity = new _Vector3();\n\n\n\t\tthis.setFriction(states.friction);\n\t\tthis.setGravity(states.gravity);\n\n\t\tdelete states.friction;\n\t\tdelete states.gravity;\n\n\n\t\t_Layer.call(this, states);\n\n\t\tstates = null;\n\n\t}",
			"type": "function",
			"hash": "105a9b0d",
			"parameters": [
				{
					"chunk": null,
					"name": "data",
					"type": "Object"
				}
			],
			"memory": [
				"_Layer"
			]
		},
		"states": {
			"friction": "setFriction",
			"gravity": "setGravity"
		},
		"properties": {
			"friction": {
				"chunk": "this.friction   = 0.99;",
				"type": "Number",
				"hash": "0a2dc0ff",
				"value": {
					"chunk": "0.99",
					"type": "Number",
					"hash": "36a064e8",
					"value": 0.99
				}
			},
			"gravity": {
				"chunk": "this.gravity    = new _Vector3({ x: 0, y: 1, z: 0 });",
				"type": "_Vector3",
				"hash": "88f053ee",
				"value": {
					"chunk": "new _Vector3({ x: 0, y: 1, z: 0 })",
					"type": "_Vector3",
					"hash": "e186976e"
				}
			},
			"__velocity": {
				"chunk": "this.__velocity = new _Vector3();",
				"type": "_Vector3",
				"hash": "91a3ff7f",
				"value": {
					"chunk": "new _Vector3()",
					"type": "_Vector3",
					"hash": "0a6b8202"
				}
			}
		},
		"enums": {},
		"events": {},
		"methods": {
			"deserialize": {
				"chunk": "function(blob) {}",
				"type": "function",
				"hash": "cf6d9c5f",
				"memory": [],
				"parameters": [
					{
						"name": "blob",
						"type": "SerializationBlob",
						"value": {}
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"serialize": {
				"chunk": "function() {\n\n\t\t\tlet data = _Layer.prototype.serialize.call(this);\n\t\t\tdata['constructor'] = 'lychee.verlet.Layer';\n\n\t\t\tlet states = data['arguments'][0];\n\t\t\tlet blob   = (data['blob'] || {});\n\n\n\t\t\tif (this.friction !== 0.99)      states.friction = this.friction;\n\t\t\tif (this.gravity.length() !== 0) states.gravity  = lychee.serialize(this.gravity);\n\n\n\t\t\tdata['blob'] = Object.keys(blob).length > 0 ? blob : null;\n\n\n\t\t\treturn data;\n\n\t\t}",
				"type": "function",
				"hash": "d511b084",
				"memory": [
					"_Layer"
				],
				"parameters": [],
				"values": [
					{
						"chunk": "{ 'constructor': 'lychee.event.Emitter',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t}",
						"type": "Object",
						"value": {}
					}
				]
			},
			"update": {
				"chunk": "function(clock, delta) {\n\n\t\t\t_Layer.prototype.update.call(this, clock, delta);\n\n\n\t\t\tlet entities = this.entities;\n\t\t\tlet friction = this.friction;\n\t\t\tlet gravity  = this.gravity;\n\t\t\tlet velocity = this.__velocity;\n\n\n\t\t\tlet hheight = this.height / 2;\n\n\t\t\tfor (let e = 0, el = entities.length; e < el; e++) {\n\n\t\t\t\tlet entity    = entities[e];\n\t\t\t\tlet position  = entity.position.clone();\n\t\t\t\tlet particles = entity.particles;\n\n\t\t\t\tfor (let p = 0, pl = particles.length; p < pl; p++) {\n\n\t\t\t\t\tlet particle = particles[p];\n\n\n\t\t\t\t\tparticle.copy(velocity);\n\t\t\t\t\tvelocity.sub(position);\n\t\t\t\t\tvelocity.scale(friction);\n\n\n\t\t\t\t\tif (particle.y >= hheight && velocity.squaredLength() > 0.00000001) {\n\n\t\t\t\t\t\tlet m = velocity.length();\n\n\t\t\t\t\t\tvelocity.x /= m;\n\t\t\t\t\t\tvelocity.y /= m;\n\t\t\t\t\t\tvelocity.z /= m;\n\n\t\t\t\t\t\tvelocity.scale(m * 0.8);\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tparticle.copy(position);\n\t\t\t\t\tparticle.add(gravity);\n\t\t\t\t\tparticle.add(velocity);\n\n\n\t\t\t\t\tif (particle.y > hheight) {\n\t\t\t\t\t\tparticle.y = hheight;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}",
				"type": "function",
				"hash": "36be95a0",
				"memory": [
					"_Layer"
				],
				"parameters": [
					{
						"chunk": null,
						"name": "clock",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "delta",
						"type": "undefined"
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"setFriction": {
				"chunk": "function(friction) {\n\n\t\t\tfriction = typeof friction === 'number' ? friction : 0.99;\n\n\n\t\t\tif (friction > 0 && friction < 1) {\n\n\t\t\t\tthis.friction = 1 - friction;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "f4b297c1",
				"memory": [],
				"parameters": [
					{
						"chunk": "typeof friction === 'number' ? friction : 0.99",
						"name": "friction",
						"type": "Number",
						"value": 0.99
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"setGravity": {
				"chunk": "function(gravity) {\n\n\t\t\tgravity = gravity instanceof _Vector3 ? gravity : null;\n\n\n\t\t\tif (gravity !== null) {\n\n\t\t\t\tthis.gravity = gravity;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "2711158d",
				"memory": [],
				"parameters": [
					{
						"chunk": "gravity instanceof _Vector3 ? gravity : null",
						"name": "gravity",
						"type": "_Vector3",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			}
		}
	}
}